<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trade.dao.MiddleSaleInfoDao">
	<resultMap type="com.trade.model.MiddleSaleInfo" id="BaseResultMap">
		<result property="companyPrimaryKey" column="COMPANY_PRIMARY_KEY" javaType="String" />
		<result property="invoiceCode" column="INVOICE_CODE" javaType="String" />
		<result property="invoiceId" column="INVOICE_ID" javaType="String" />
		<result property="goodsId" column="GOODS_ID" javaType="String" />
		<result property="batchCode" column="BATCH_CODE" javaType="String" />
		<result property="periodDate" column="PERIOD_DATE" javaType="Date" />
		<result property="saleNumber" column="SALE_NUMBER" javaType="BigDecimal" />
		<result property="invoicePrimaryId" column="INVOICE_PRIMARY_ID" javaType="String" />
		<result property="orgId" column="ORG_ID" javaType="String" />
		<result property="responseState" column="RESPONSE_STATE" javaType="String" />
		<result property="responseInfo" column="RESPONSE_INFO" javaType="String" />
		<result property="responseTime" column="RESPONSE_TIME" javaType="Date" />
	</resultMap>

	<sql id="full-columns">
		t.COMPANY_PRIMARY_KEY,
		t.INVOICE_CODE,
		t.INVOICE_ID,
		t.GOODS_ID,
		t.BATCH_CODE,
		t.PERIOD_DATE,
		t.SALE_NUMBER,
		t.INVOICE_PRIMARY_ID,
		t.ORG_ID,
		t.RESPONSE_STATE,
		t.RESPONSE_INFO,
		t.RESPONSE_TIME
	</sql>
	
	<sql id="common_where_if">
			<if test="@OGNL@isNotEmpty(companyPrimaryKey)">
				AND t.COMPANY_PRIMARY_KEY = #{companyPrimaryKey}
			</if>
			<if test="@OGNL@isNotEmpty(invoiceCode)">
				AND t.INVOICE_CODE = #{invoiceCode}
			</if>
			<if test="@OGNL@isNotEmpty(invoiceId)">
				AND t.INVOICE_ID = #{invoiceId}
			</if>
			<if test="@OGNL@isNotEmpty(goodsId)">
				AND t.GOODS_ID = #{goodsId}
			</if>
			<if test="@OGNL@isNotEmpty(batchCode)">
				AND t.BATCH_CODE = #{batchCode}
			</if>
			<if test="@OGNL@isNotEmpty(periodDate)">
				AND t.PERIOD_DATE = #{periodDate}
			</if>
			<if test="@OGNL@isNotEmpty(saleNumber)">
				AND t.SALE_NUMBER = #{saleNumber}
			</if>
			<if test="@OGNL@isNotEmpty(invoicePrimaryId)">
				AND t.INVOICE_PRIMARY_ID = #{invoicePrimaryId}
			</if>
			<if test="@OGNL@isNotEmpty(orgId)">
				AND t.ORG_ID = #{orgId}
			</if>
			<if test="@OGNL@isNotEmpty(responseState)">
				AND t.RESPONSE_STATE = #{responseState}
			</if>
			<if test="@OGNL@isNotEmpty(responseInfo)">
				AND t.RESPONSE_INFO = #{responseInfo}
			</if>
			<if test="@OGNL@isNotEmpty(responseTime)">
				AND t.RESPONSE_TIME = #{responseTime}
			</if>
	</sql>

	<insert id="save" parameterType="com.trade.model.MiddleSaleInfo">
		INSERT INTO MIDDLE_SALE_INFO(
		COMPANY_PRIMARY_KEY ,
		INVOICE_CODE ,
		INVOICE_ID ,
		GOODS_ID ,
		BATCH_CODE ,
		PERIOD_DATE ,
		SALE_NUMBER ,
		INVOICE_PRIMARY_ID ,
		ORG_ID ,
		RESPONSE_STATE ,
		RESPONSE_INFO ,
		RESPONSE_TIME 
		)
		VALUES (
		#{companyPrimaryKey} ,
		#{invoiceCode} ,
		#{invoiceId} ,
		#{goodsId} ,
		#{batchCode} ,
		#{periodDate} ,
		#{saleNumber} ,
		#{invoicePrimaryId} ,
		#{orgId} ,
		#{responseState} ,
		#{responseInfo} ,
		#{responseTime} 
		)
	</insert>

	<insert id="saveBatch" parameterType="java.util.List">
		INSERT INTO MIDDLE_SALE_INFO (
		COMPANY_PRIMARY_KEY ,
		INVOICE_CODE ,
		INVOICE_ID ,
		GOODS_ID ,
		BATCH_CODE ,
		PERIOD_DATE ,
		SALE_NUMBER ,
		INVOICE_PRIMARY_ID ,
		ORG_ID ,
		RESPONSE_STATE ,
		RESPONSE_INFO ,
		RESPONSE_TIME 
		) VALUES
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.companyPrimaryKey},
			#{item.invoiceCode},
			#{item.invoiceId},
			#{item.goodsId},
			#{item.batchCode},
			#{item.periodDate},
			#{item.saleNumber},
			#{item.invoicePrimaryId},
			#{item.orgId},
			#{item.responseState},
			#{item.responseInfo},
			#{item.responseTime}
			)
		</foreach>
	</insert>

	<select id="getById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT
		<include refid="full-columns" />
		FROM MIDDLE_SALE_INFO t
		WHERE t.COMPANY_PRIMARY_KEY = #{value}
	</select>

	<select id="getListByParams" parameterType="map" resultMap="BaseResultMap">
		SELECT
		<include refid="full-columns" />
		FROM MIDDLE_SALE_INFO t
		<where>
			<include refid="common_where_if"/>
		</where>
	</select>

	<select id="countByParams" parameterType="map" resultType="int">
		SELECT count(*)
		FROM MIDDLE_SALE_INFO t
		<where>
			<include refid="common_where_if"/>
		</where>
	</select>

	<update id="updateById" parameterType="com.trade.model.MiddleSaleInfo">
		UPDATE MIDDLE_SALE_INFO
		<set>
			INVOICE_CODE =
			#{invoiceCode},
			INVOICE_ID =
			#{invoiceId},
			GOODS_ID =
			#{goodsId},
			BATCH_CODE =
			#{batchCode},
			PERIOD_DATE =
			#{periodDate},
			SALE_NUMBER =
			#{saleNumber},
			INVOICE_PRIMARY_ID =
			#{invoicePrimaryId},
			ORG_ID =
			#{orgId},
			RESPONSE_STATE =
			#{responseState},
			RESPONSE_INFO =
			#{responseInfo},
			RESPONSE_TIME =
			#{responseTime},
		</set>
		WHERE COMPANY_PRIMARY_KEY =
		#{companyPrimaryKey}
	</update>

	<update id="updateBySelective" parameterType="com.trade.model.MiddleSaleInfo">
		UPDATE MIDDLE_SALE_INFO
		<set>
			<if test="@OGNL@isNotEmpty(invoiceCode)">
				INVOICE_CODE =
				#{invoiceCode},
			</if>
			<if test="@OGNL@isNotEmpty(invoiceId)">
				INVOICE_ID =
				#{invoiceId},
			</if>
			<if test="@OGNL@isNotEmpty(goodsId)">
				GOODS_ID =
				#{goodsId},
			</if>
			<if test="@OGNL@isNotEmpty(batchCode)">
				BATCH_CODE =
				#{batchCode},
			</if>
			<if test="@OGNL@isNotEmpty(periodDate)">
				PERIOD_DATE =
				#{periodDate},
			</if>
			<if test="@OGNL@isNotEmpty(saleNumber)">
				SALE_NUMBER =
				#{saleNumber},
			</if>
			<if test="@OGNL@isNotEmpty(invoicePrimaryId)">
				INVOICE_PRIMARY_ID =
				#{invoicePrimaryId},
			</if>
			<if test="@OGNL@isNotEmpty(orgId)">
				ORG_ID =
				#{orgId},
			</if>
			<if test="@OGNL@isNotEmpty(responseState)">
				RESPONSE_STATE =
				#{responseState},
			</if>
			<if test="@OGNL@isNotEmpty(responseInfo)">
				RESPONSE_INFO =
				#{responseInfo},
			</if>
			<if test="@OGNL@isNotEmpty(responseTime)">
				RESPONSE_TIME =
				#{responseTime},
			</if>
		</set>
		WHERE COMPANY_PRIMARY_KEY =
		#{companyPrimaryKey}
	</update>

	<update id="updateByParams">
		UPDATE MIDDLE_SALE_INFO t
		<set>
			<if test="@OGNL@isNotEmpty(model.invoiceCode)">
				INVOICE_CODE =
				#{model.invoiceCode},
			</if>
			<if test="@OGNL@isNotEmpty(model.invoiceId)">
				INVOICE_ID =
				#{model.invoiceId},
			</if>
			<if test="@OGNL@isNotEmpty(model.goodsId)">
				GOODS_ID =
				#{model.goodsId},
			</if>
			<if test="@OGNL@isNotEmpty(model.batchCode)">
				BATCH_CODE =
				#{model.batchCode},
			</if>
			<if test="@OGNL@isNotEmpty(model.periodDate)">
				PERIOD_DATE =
				#{model.periodDate},
			</if>
			<if test="@OGNL@isNotEmpty(model.saleNumber)">
				SALE_NUMBER =
				#{model.saleNumber},
			</if>
			<if test="@OGNL@isNotEmpty(model.invoicePrimaryId)">
				INVOICE_PRIMARY_ID =
				#{model.invoicePrimaryId},
			</if>
			<if test="@OGNL@isNotEmpty(model.orgId)">
				ORG_ID =
				#{model.orgId},
			</if>
			<if test="@OGNL@isNotEmpty(model.responseState)">
				RESPONSE_STATE =
				#{model.responseState},
			</if>
			<if test="@OGNL@isNotEmpty(model.responseInfo)">
				RESPONSE_INFO =
				#{model.responseInfo},
			</if>
			<if test="@OGNL@isNotEmpty(model.responseTime)">
				RESPONSE_TIME =
				#{model.responseTime},
			</if>
		</set>
		<where>
			<include refid="common_where_if"/>
		</where>
	</update>

	<delete id="deleteById" parameterType="java.lang.String">
		DELETE FROM
		MIDDLE_SALE_INFO WHERE COMPANY_PRIMARY_KEY = #{value}
	</delete>
</mapper>
